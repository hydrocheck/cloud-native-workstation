# Domain for your workstation
domain: example.com
# Kubernetes namespace for your workstation
namespace: cloud-native-workstation
# Public images on Docker Hub
docker:
  registry: ndebuhr
  tag: v0.5.0
# Certbot details
certbot:
  # Valid types are "google" and "cloudflare"
  type: google
  email: admin@example.com
# Keycloak security
keycloak:
  # Change me!
  clientSecret: OkSR7DMXAXzIrZIoWyN8yh0sFkiYrfJd
  # Change me!
  cookieSecret: 2u2iS0FH7pPjOUUn
# Authentication for Code Server and Keycloak
authentication:
  username: workstation
  # Change me!
  password: M@inz!DE
# Network policies and OPA constraint templates
policies:
  enabled: true
# Components included in the workstation
components:
  keycloak:
    resources:
      requests:
        memory: 0
        cpu: 0
      limits:
        memory: "4Gi"
        cpu: "2"
    postgres:
      resources:
        requests:
          memory: 0
          cpu: 0
        limits:
          memory: "4Gi"
          cpu: "2"
  initializers:
    resources:
      requests:
        memory: 0
        cpu: 0
      limits:
        memory: "256Mi"
        cpu: "125m"
  oauth2Proxy:
    resources:
      requests:
        memory: 0
        cpu: 0
      limits:
        memory: "2Gi"
        cpu: "1"
  code:
    enabled: true
    resources:
      requests:
        memory: 0
        cpu: 0
      limits:
        memory: "8Gi"
        cpu: "4"
    dind:
      image: docker
      tag: 19-dind
      resources:
        requests:
          memory: 0
          cpu: 0
        limits:
          memory: "4Gi"
          cpu: "2"
  selenium:
    enabled: false
    novnc:
      resources:
        requests:
          memory: 0
          cpu: 0
        limits:
          memory: "4Gi"
          cpu: "2"
  jupyter:
    enabled: false
    resources:
      requests:
        memory: 0
        cpu: 0
      limits:
        memory: "8Gi"
        cpu: "4"
  certbot:
    enabled: true
    resources:
      requests:
        memory: 0
        cpu: 0
      limits:
        memory: "256Mi"
        cpu: "125m"
  landing:
    enabled: false
    resources:
      requests:
        memory: 0
        cpu: 0
      limits:
        memory: "2Gi"
        cpu: "1"
  sonarqube:
    enabled: false
  guacamole:
    enabled: false
    resources:
      requests:
        memory: 0
        cpu: 0
      limits:
        memory: "4Gi"
        cpu: "1"
    guacd:
      resources:
        requests:
          memory: 0
          cpu: 0
        limits:
          memory: "4Gi"
          cpu: "1"
    postgres:
      resources:
        requests:
          memory: 0
          cpu: 0
        limits:
          memory: "4Gi"
          cpu: "2"
  prometheus:
    enabled: true
    resources:
      requests:
        memory: 0
        cpu: 0
      limits:
        memory: "2Gi"
        cpu: "1"
  grafana:
    enabled: true
    dashboards:
      prometheus:
        plugin:
        - dashboards/prometheus_stats.json
        - dashboards/prometheus_2_stats.json
        - dashboards/grafana_stats.json
        community:
        - 13332
    resources:
      requests:
        memory: 0
        cpu: 0
      limits:
        memory: "2Gi"
        cpu: "1"
# Ingress targets
access:
- name: code
- name: hugo
- name: selenium
- name: novnc
- name: jupyter
- name: landing
- name: sonarqube
- name: guacamole
- name: prometheus
- name: grafana
podDefaults:
  automountServiceAccountToken: false
  serviceAccountName: workstation-default
# Additional component-specific configuration
selenium:
  hub:
    serviceType: ClusterIP
    resources:
      requests:
        memory: 0
        cpu: 0
      limits:
        cpu: 1
        memory: 2Gi
  chromeDebug:
    enabled: true
    resources:
      requests:
        cpu: 0
        memory: 0
      limits:
        cpu: 2
        memory: 8Gi
    extraEnvs:
    - name: VNC_NO_PASSWORD
      value: "1"
sonarqube:
  initContainers:
    resources:
      requests:
        memory: 0
        cpu: 0
      limits:
        memory: "256Mi"
        cpu: "125m"
  postgresql:
    resources:
      requests:
        memory: "0"
        cpu: "0"
  resources:
    requests:
      memory: 0
      cpu: 0
    limits:
      cpu: 1
      memory: 2Gi
landing:
  image: gcr.io/google-samples/hello-app:2.0
  targetPort: 8080