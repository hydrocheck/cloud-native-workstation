apiVersion: keycloak.org/v1alpha1
kind: Keycloak
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  instances: 1
  externalAccess:
    enabled: false
  keycloakDeploymentSpec:
    resources: {{- toYaml .Values.components.keycloak.resources | nindent 6 }}
  postgresDeploymentSpec:
    resources: {{- toYaml .Values.components.keycloak.postgres.resources | nindent 6 }}
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakRealm
metadata:
  name: keycloak-realm
  labels:
    app: keycloak-realm
spec:
  realm:
    id: workstation
    realm: workstation
    enabled: True
    displayName: "Workstation Realm"
    roles:
      realm:
      - name: admin
  instanceSelector:
    matchLabels:
      app: keycloak
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: keycloak-client
  labels:
    app: keycloak-client
spec:
  roles:
  - clientRole: true
    containerId: workstation
    name: user
    composite: false
  - clientRole: true
    containerId: workstation
    name: admin
    composite: false
  - clientRole: true
    containerId: workstation
    name: manager
    composite: false
  client:
    clientId: workstation
    secret: {{ .Values.keycloak.clientSecret }}
    standardFlowEnabled: true
    redirectUris:
    - "*"
    fullScopeAllowed: true
    defaultClientScopes:
      - web-origins
      - role_list
      - profile
      - roles
      - email
    optionalClientScopes:
      - address
      - phone
      - offline_access
      - microprofile-jwt
  realmSelector:
     matchLabels:
      app: keycloak-realm
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakUser
metadata:
  name: workstation-user
spec:
  user:
    username: {{ .Values.authentication.username }}
    firstName: "Workstation"
    lastName: "User"
    email: "admin@{{ .Values.domain }}"
    enabled: True
    emailVerified: True
    credentials:
    - type: password
      value: {{ .Values.authentication.password }}
    clientRoles:
      account:
      - manage-account
      - view-profile
      workstation:
      - admin
      - manager
      - user
    realmRoles:
    - offline_access
    - uma_authorization
  realmSelector:
    matchLabels:
      app: keycloak-realm
{{- if eq .Values.policies.enabled true }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: keycloak-postgres
spec:
  podSelector:
    matchLabels:
      app: keycloak
      component: database
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: keycloak
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: keycloak
spec:
  podSelector:
    matchLabels:
      app: keycloak
      component: keycloak
  policyTypes:
  - Egress
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: ingress-nginx
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: keycloak
          component: database
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: keycloak-operator
spec:
  podSelector:
    matchLabels:
      app: keycloak-operator
  policyTypes:
  - Ingress
  - Egress
  egress:
  - {}
{{- end }}