{{- if eq .Values.components.prometheus.enabled true }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-kube-state-metrics
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: prometheus-kube-state-metrics
  namespace: {{ .Values.namespace }}
subjects:
- kind: ServiceAccount
  name: prometheus-kube-state-metrics
  namespace: {{ .Values.namespace }}
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-kube-state-metrics
spec:
  selector:
    matchLabels:
      app: prometheus-kube-state-metrics
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus-kube-state-metrics
    spec:
      serviceAccountName: prometheus-kube-state-metrics
      containers:
      - name: kube-state-metrics
        image: quay.io/coreos/kube-state-metrics:v1.9.8
        args:
          - '--namespace={{ .Values.namespace }}'
        ports:
        - name: http-metrics
          containerPort: 8080
        resources: {{- toYaml .Values.components.prometheus.resources | nindent 10 }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
---
kind: Service
apiVersion: v1
metadata:
  name: prometheus-kube-state-metrics
spec:
  type: ClusterIP
  selector:
    app: prometheus-kube-state-metrics
  ports:
  - port: 8080
{{- if eq .Values.policies.enabled true }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: prometheus-kube-state-metrics
  namespace: {{ .Values.namespace }}
spec:
  podSelector:
    matchLabels:
      app: prometheus-kube-state-metrics
  policyTypes:
  - Egress
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: prometheus
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
{{- end }}
{{- end }}