name: deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: code checkout
      uses: actions/checkout@v2
      with:
        submodules: 'true'

    - name: Install gcloud cli
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Install terraform cli
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.1.2

    - name: Provision a GKE cluster
      working-directory: ./provision/gke/
      run: |
        terraform init
        terraform apply -auto-approve -var gke_cluster_name=cloud-native-workstation-$GITHUB_RUN_NUMBER

    - name: Install helm
      run: |
        gcloud container clusters get-credentials cloud-native-workstation-$GITHUB_RUN_NUMBER --zone us-central1-a
        alias helm="docker run -ti --rm -v $(pwd):/apps -v ~/.kube:/root/.kube -v ~/.helm:/root/.helm alpine/helm:3.5.4"

    - name: Setup kubeconfig
      run: |
        kubectl create namespace cloud-native-workstation
        kubectl config set-context --current --namespace cloud-native-workstation

    - name: Install workstation prerequisites
      working-directory: ./prepare/chart/
      run: |
        helm dep update
        helm install workstation-prerequisites . -n kube-system

    - name: Install CRDs
      working-directory: ./prepare/crds/
      run: |
        ./keycloak.sh
        ./opa.sh

    - name: Deploy a workstation
      working-directory: ./deploy/
      run: |
        helm dep update
        helm install workstation . \
            --set domain=a.example.com \
            --set pgweb.enabled=true \
            --set sftp.enabled=true \
            --set selenium.enabled=true \
            --set selenium.chrome.enabled=true \
            --set selenium.firefox.enabled=true \
            --set selenium.edge.enabled=true \
            --set jupyter.enabled=true \
            --set landing.enabled=true \
            --set sonarqube.enabled=true \
            --set guacamole.enabled=true \
            --set kanboard.enabled=true \
            --set prometheus.enabled=true \
            --set grafana.enabled=true

    - name: Deploy a second workstation
      working-directory: ./deploy/
      run: |
        kubectl create namespace second-workstation-test
        kubectl config set-context --current --namespace second-workstation-test
        helm dep update
        helm install workstation . \
            --set domain=b.example.com \
            --set pgweb.enabled=true \
            --set sftp.enabled=true \
            --set selenium.enabled=true \
            --set selenium.chrome.enabled=true \
            --set selenium.firefox.enabled=true \
            --set selenium.edge.enabled=true \
            --set jupyter.enabled=true \
            --set landing.enabled=true \
            --set sonarqube.enabled=true \
            --set guacamole.enabled=true \
            --set kanboard.enabled=true \
            --set prometheus.enabled=true \
            --set grafana.enabled=true

    - name: Undeploy
      run: |
        helm uninstall workstation

    - name: Deprovision
      working-directory: ./provision/gke/
      run: |
        terraform destroy -auto-approve
