apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: main
  annotations:
    # nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-User,X-Auth-Request-Email
    nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy.{{ .Values.domain }}/oauth2/auth
    nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy.{{ .Values.domain }}/oauth2/start?rd=$scheme://$best_http_host$request_uri
    nginx.ingress.kubernetes.io/proxy-body-size: 16m
spec:
  ingressClassName: workstation-nginx
  tls:
  - hosts:
    {{- $root := . }}
    {{- range .Values.access }}
    - {{ .name }}.{{ $root.Values.domain }}
    {{- end }}
    secretName: workstation-tls
  rules:
  {{- $root := . }}
  {{- range .Values.access }}
  - host: {{ .name }}.{{ $root.Values.domain }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .name }}
            port:
              number: 80
  {{- end }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-ssl-verify: 'off'
spec:
  ingressClassName: workstation-nginx
  tls:
  - hosts:
    - keycloak.{{ .Values.domain }}
    secretName: workstation-tls
  rules:
  - host: keycloak.{{ .Values.domain }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: keycloak
            port:
              number: 8443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2-proxy
spec:
  ingressClassName: workstation-nginx
  tls:
  - hosts:
    - oauth2-proxy.{{ .Values.domain }}
    secretName: workstation-tls
  rules:
  - host: oauth2-proxy.{{ .Values.domain }}
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              number: 4180
{{- if eq .Values.policies.enabled true }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress
spec:
  podSelector:
    matchLabels:
      app: ingress-nginx
  policyTypes:
  - Egress
  - Ingress
  ingress:
  - {}
  egress:
  - {}
{{- end }}