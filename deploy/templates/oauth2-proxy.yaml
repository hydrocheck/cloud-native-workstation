apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy
  labels:
    app: oauth2-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth2-proxy
  template:
    metadata:
      labels:
        app: oauth2-proxy
    spec:
      {{ toYaml .Values.podDefaults | nindent 6 }}
      containers:
      - name: oauth2-proxy
        image: {{ .Values.oauth2Proxy.image }}
        args:
        - "--session-cookie-minimal"
        - "--session-store-type=redis"
        - "--redis-connection-url=redis://{{ .Release.Name }}-redis-master:6379"
        ports:
        - containerPort: 4180
          protocol: TCP
        resources: {{ toYaml .Values.oauth2Proxy.resources | nindent 10 }}
        env:
          # OIDC Config
          - name: "OAUTH2_PROXY_SCOPE"
            value: "openid profile"
          - name: "OAUTH2_PROXY_PROVIDER"
            value: "oidc"
          - name: "OAUTH2_PROXY_OIDC_ISSUER_URL"
            value: "https://keycloak.{{ .Values.domain }}/auth/realms/workstation"
          - name: "OAUTH2_PROXY_CLIENT_ID"
            value: workstation
          - name: "OAUTH2_PROXY_CLIENT_SECRET"
            value: {{ .Values.keycloak.clientSecret }}
          # Cookie Config
          - name: "OAUTH2_PROXY_COOKIE_SECRET"
            value: "{{ .Values.keycloak.cookieSecret }}"
          - name: "OAUTH2_PROXY_COOKIE_DOMAINS"
            value: ".{{ .Values.domain }}"
          # Proxy config
          - name: "OAUTH2_PROXY_EMAIL_DOMAINS"
            value: "*"
          - name: "OAUTH2_PROXY_WHITELIST_DOMAINS"
            value: ".{{ .Values.domain }}"
          - name: "OAUTH2_PROXY_HTTP_ADDRESS"
            value: "0.0.0.0:4180"
          - name: "OAUTH2_PROXY_SET_XAUTHREQUEST"
            value: "true"
          - name: "OAUTH2_PROXY_UPSTREAMS"
            value: "file:///dev/null"
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: oauth2-proxy
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: oauth2-proxy
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 50
---
apiVersion: v1
kind: Service
metadata:
  name: oauth2-proxy
  labels:
    app: oauth2-proxy
spec:
  ports:
  - name: http
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    app: oauth2-proxy
{{ if eq .Values.policies.enabled true }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: oauth2-proxy
spec:
  podSelector:
    matchLabels:
      app: oauth2-proxy
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: ingress-nginx
    - namespaceSelector: {}
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: ingress-nginx
    - namespaceSelector: {}
  - to:
    - podSelector:
        matchLabels:
          app: keycloak
          component: keycloak
{{ end }}