apiVersion: keycloak.org/v1alpha1
kind: Keycloak
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  instances: 1
  externalAccess:
    enabled: false
  keycloakDeploymentSpec:
    resources: {{- toYaml .Values.components.keycloak.resources | nindent 6 }}
  postgresDeploymentSpec:
    resources: {{- toYaml .Values.components.keycloak.postgres.resources | nindent 6 }}
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakRealm
metadata:
  name: keycloak-realm
  labels:
    app: keycloak-realm
spec:
  realm:
    id: workstation
    realm: workstation
    enabled: True
    displayName: "Workstation Realm"
    roles:
      realm:
      - name: admin
  instanceSelector:
    matchLabels:
      app: keycloak
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: keycloak-client
  labels:
    app: keycloak-client
spec:
  roles:
  - clientRole: true
    containerId: workstation
    name: user
    composite: false
  - clientRole: true
    containerId: workstation
    name: admin
    composite: false
  - clientRole: true
    containerId: workstation
    name: manager
    composite: false
  client:
    clientId: workstation
    secret: {{ .Values.keycloak.clientSecret }}
    standardFlowEnabled: true
    redirectUris:
    - "*"
    fullScopeAllowed: true
    defaultClientScopes:
      - web-origins
      - role_list
      - profile
      - roles
      - email
    optionalClientScopes:
      - address
      - phone
      - offline_access
      - microprofile-jwt
  realmSelector:
     matchLabels:
      app: keycloak-realm
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakUser
metadata:
  name: workstation-user
spec:
  user:
    username: {{ .Values.authentication.username }}
    firstName: "Workstation"
    lastName: "User"
    email: "admin@{{ .Values.domain }}"
    enabled: True
    emailVerified: True
    credentials:
    - type: password
      value: {{ .Values.authentication.password }}
    clientRoles:
      account:
      - manage-account
      - view-profile
      workstation:
      - admin
      - manager
      - user
    realmRoles:
    - offline_access
    - uma_authorization
  realmSelector:
    matchLabels:
      app: keycloak-realm
---
# https://github.com/keycloak/keycloak-operator/blob/master/deploy/operator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak-operator
  template:
    metadata:
      labels:
        app: keycloak-operator
    spec:
      serviceAccountName: keycloak-operator
      containers:
      - name: keycloak-operator
        image: quay.io/keycloak/keycloak-operator:15.0.2
        command:
        - keycloak-operator
        imagePullPolicy: Always
        resources: {{- toYaml .Values.components.keycloak.operator.resources | nindent 10 }}
        env:
          - name: WATCH_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: OPERATOR_NAME
            value: "keycloak-operator"
---
# https://github.com/keycloak/keycloak-operator/blob/master/deploy/role_binding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: keycloak-operator
subjects:
- kind: ServiceAccount
  name: keycloak-operator
roleRef:
  kind: Role
  name: keycloak-operator
  apiGroup: rbac.authorization.k8s.io
---
# https://github.com/keycloak/keycloak-operator/blob/master/deploy/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: keycloak-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - services/finalizers
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - list
  - get
  - create
  - patch
  - update
  - watch
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - list
  - get
  - create
  - update
  - watch
- apiGroups:
  - batch
  resources:
    - cronjobs
    - jobs
  verbs:
    - list
    - get
    - create
    - update
    - watch
- apiGroups:
    - route.openshift.io
  resources:
    - routes/custom-host
  verbs:
    - create
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - list
  - get
  - create
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - list
  - get
  - create
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  - prometheusrules
  verbs:
  - list
  - get
  - create
  - update
  - watch
- apiGroups:
  - integreatly.org
  resources:
  - grafanadashboards
  verbs:
  - get
  - list
  - create
  - update
  - watch
- apiGroups:
  - apps
  resourceNames:
  - keycloak-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - get
  - list
  - create
  - update
  - watch
- apiGroups:
  - keycloak.org
  resources:
  - keycloaks
  - keycloaks/status
  - keycloaks/finalizers
  - keycloakrealms
  - keycloakrealms/status
  - keycloakrealms/finalizers
  - keycloakclients
  - keycloakclients/status
  - keycloakclients/finalizers
  - keycloakbackups
  - keycloakbackups/status
  - keycloakbackups/finalizers
  - keycloakusers
  - keycloakusers/status
  - keycloakusers/finalizers
  verbs:
  - get
  - list
  - update
  - watch
---
# https://github.com/keycloak/keycloak-operator/blob/master/deploy/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keycloak-operator
{{- if eq .Values.policies.enabled true }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: keycloak-postgres
spec:
  podSelector:
    matchLabels:
      app: keycloak
      component: database
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: keycloak
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: keycloak
spec:
  podSelector:
    matchLabels:
      app: keycloak
      component: keycloak
  policyTypes:
  - Egress
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: ingress-nginx
    - namespaceSelector: {}
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: keycloak
          component: database
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: keycloak-operator
spec:
  podSelector:
    matchLabels:
      app: keycloak-operator
  policyTypes:
  - Ingress
  - Egress
  egress:
  - {}
{{- end }}